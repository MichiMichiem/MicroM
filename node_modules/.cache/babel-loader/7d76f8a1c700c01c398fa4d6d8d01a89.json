{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js\";\n\n/* eslint-disable */\nimport React, { useState, useEffect } from 'react'; // Striker Custom\n\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData'; // material-ui\n\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal'; // ==============================|| Page: Organization ||============================== //\n// <TreeNode label={<div>Production</div>}/>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orgchart = () => {\n  const orgTree = new TreeClass(OrgChartData.organization);\n  OrgChartData.sections.forEach(section => {\n    if (section.parent === 0) {\n      orgTree.addChild(section);\n    } else {\n      orgTree.getNodeById(section.parent).addChild(section);\n    }\n  });\n  console.log(\"orgTree\", orgTree.children); // function recurse(cur) {\n  //     console.log(\"cur\", cur)\n  //     if (cur.children.length = 0) {\n  //         console.log(cur.value.name)\n  //         console.log(\"Main If\")\n  //         return (<TreeNode label={<div>{cur.value.name}</div>}/>)\n  //     } else {\n  //         console.log(\"Else\")\n  //         for (let i=0;i < cur.children.length;i++) {\n  //             recurse(cur.children[i])\n  //             console.log(cur.children[i].value.name)\n  //             return (<TreeNode label={<div>{cur.children[i].value.name}</div>}/>)\n  //         }\n  //     }\n  // }\n\n  console.log(\"orgTree\", orgTree);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(MainCard, {\n            title: \"Organization\",\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: OrgChartData.organization.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"BAFB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 34\n              }, this),\n              children: recurse(orgTree)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Orgchart;\nexport default Orgchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orgchart\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js"],"names":["React","useState","useEffect","TreeClass","OrgChartData","Typography","Grid","List","ListItem","Card","Button","Tree","TreeNode","gridSpacing","MainCard","SimpleModal","Orgchart","orgTree","organization","sections","forEach","section","parent","addChild","getNodeById","console","log","children","name","recurse"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB,C,CAGA;AAEA;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAG,IAAId,SAAJ,CAAcC,YAAY,CAACc,YAA3B,CAAhB;AACAd,EAAAA,YAAY,CAACe,QAAb,CAAsBC,OAAtB,CAA+BC,OAAD,IAAa;AACvC,QAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACtBL,MAAAA,OAAO,CAACM,QAAR,CAAiBF,OAAjB;AACH,KAFD,MAEO;AACHJ,MAAAA,OAAO,CAACO,WAAR,CAAoBH,OAAO,CAACC,MAA5B,EAAoCC,QAApC,CAA6CF,OAA7C;AACH;AACJ,GAND;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAO,CAACU,QAA/B,EATmB,CAUnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAvB;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEJ,WAAzB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAEA,WAAzB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACA,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,cAAhB;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,KAAK,eAAE;AAAA,wCAAK;AAAA,4BAAKT,YAAY,CAACc,YAAb,CAA0BU;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAAL,eAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAb;AAAA,wBACKC,OAAO,CAACZ,OAAD;AADZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcF,CAxCF;;KAAMD,Q;AA0CN,eAAeA,QAAf","sourcesContent":["/* eslint-disable */\nimport React, {useState, useEffect} from 'react';\n\n// Striker Custom\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData';\n\n// material-ui\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal';\n\n\n// ==============================|| Page: Organization ||============================== //\n\n// <TreeNode label={<div>Production</div>}/>\nconst Orgchart = () => {\n    const orgTree = new TreeClass(OrgChartData.organization);\n    OrgChartData.sections.forEach((section) => {\n        if (section.parent === 0) {\n            orgTree.addChild(section)\n        } else {\n            orgTree.getNodeById(section.parent).addChild(section)\n        }\n    })\n    console.log(\"orgTree\", orgTree.children)\n    // function recurse(cur) {\n    //     console.log(\"cur\", cur)\n    //     if (cur.children.length = 0) {\n    //         console.log(cur.value.name)\n    //         console.log(\"Main If\")\n    //         return (<TreeNode label={<div>{cur.value.name}</div>}/>)\n    //     } else {\n    //         console.log(\"Else\")\n    //         for (let i=0;i < cur.children.length;i++) {\n    //             recurse(cur.children[i])\n    //             console.log(cur.children[i].value.name)\n    //             return (<TreeNode label={<div>{cur.children[i].value.name}</div>}/>)\n    //         }\n    //     }\n    // }\n    console.log(\"orgTree\", orgTree)\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={12}>\n                    <MainCard title=\"Organization\">\n                    <Tree label={<div><h1>{OrgChartData.organization.name}</h1><h2>BAFB</h2></div>}>\n                        {recurse(orgTree)}\n                    </Tree>\n                    </MainCard>  \n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n)};\n\nexport default Orgchart;"]},"metadata":{},"sourceType":"module"}