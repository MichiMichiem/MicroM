{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UITreeview/RecursiveTreeView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { TreeItem, TreeView } from '@material-ui/lab'; // assets\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    height: 'auto',\n    flexGrow: 1\n  }\n}); // tree data\n\nconst data = {\n  id: 'root',\n  name: 'Parent',\n  children: [{\n    id: '1',\n    name: 'Child - 1'\n  }, {\n    id: '3',\n    name: 'Child - 3',\n    children: [{\n      id: '4',\n      name: 'Child - 4'\n    }]\n  }]\n}; // ==============================|| UI TREEVIEW ||============================== //\n\nexport default function RecursiveTreeView() {\n  _s();\n\n  const classes = useStyles();\n\n  const renderTree = nodes => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: nodes.id,\n    label: nodes.name,\n    children: Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null\n  }, nodes.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }, this),\n    defaultExpanded: ['root'],\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 32\n    }, this),\n    children: renderTree(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RecursiveTreeView, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecursiveTreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecursiveTreeView\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UITreeview/RecursiveTreeView.js"],"names":["React","makeStyles","TreeItem","TreeView","ExpandMoreIcon","ChevronRightIcon","useStyles","root","height","flexGrow","data","id","name","children","RecursiveTreeView","classes","renderTree","nodes","Array","isArray","map","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,QAAQ,EAAE;AAFR;AADmB,CAAD,CAA5B,C,CAOA;;AACA,MAAMC,IAAI,GAAG;AACTC,EAAAA,EAAE,EAAE,MADK;AAETC,EAAAA,IAAI,EAAE,QAFG;AAGTC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADM,EAKN;AACID,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADM;AAHd,GALM;AAHD,CAAb,C,CAqBA;;AAEA,eAAe,SAASE,iBAAT,GAA6B;AAAA;;AACxC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,UAAU,GAAIC,KAAD,iBACf,QAAC,QAAD;AAAyB,IAAA,MAAM,EAAEA,KAAK,CAACN,EAAvC;AAA2C,IAAA,KAAK,EAAEM,KAAK,CAACL,IAAxD;AAAA,cACKM,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACJ,QAApB,IAAgCI,KAAK,CAACJ,QAAN,CAAeO,GAAf,CAAoBC,IAAD,IAAUL,UAAU,CAACK,IAAD,CAAvC,CAAhC,GAAiF;AADtF,KAAeJ,KAAK,CAACN,EAArB;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI,QAAC,QAAD;AACI,IAAA,SAAS,EAAEI,OAAO,CAACR,IADvB;AAEI,IAAA,mBAAmB,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGI,IAAA,eAAe,EAAE,CAAC,MAAD,CAHrB;AAII,IAAA,iBAAiB,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAJvB;AAAA,cAMKS,UAAU,CAACN,IAAD;AANf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAnBuBI,iB;UACJR,S;;;KADIQ,iB","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { TreeItem, TreeView } from '@material-ui/lab';\r\n\r\n// assets\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'auto',\r\n        flexGrow: 1\r\n    }\r\n});\r\n\r\n// tree data\r\nconst data = {\r\n    id: 'root',\r\n    name: 'Parent',\r\n    children: [\r\n        {\r\n            id: '1',\r\n            name: 'Child - 1'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Child - 3',\r\n            children: [\r\n                {\r\n                    id: '4',\r\n                    name: 'Child - 4'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| UI TREEVIEW ||============================== //\r\n\r\nexport default function RecursiveTreeView() {\r\n    const classes = useStyles();\r\n\r\n    const renderTree = (nodes) => (\r\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\r\n        </TreeItem>\r\n    );\r\n\r\n    return (\r\n        <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpanded={['root']}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n        >\r\n            {renderTree(data)}\r\n        </TreeView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}