{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/ui-component/extended/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react'; // material-ui\n\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary'; // assets\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n})); // ===========================|| ACCORDION ||=========================== //\n\nconst Accordion = ({\n  data,\n  defaultExpandedId,\n  expandIcon,\n  square,\n  toggle\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [expanded, setExpanded] = React.useState(null);\n\n  const handleChange = panel => (event, newExpanded) => toggle && setExpanded(newExpanded ? panel : false);\n\n  React.useEffect(() => {\n    setExpanded(defaultExpandedId);\n  }, [defaultExpandedId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: data && data.map(item => /*#__PURE__*/_jsxDEV(MuiAccordion, {\n      defaultExpanded: !item.disabled && item.defaultExpand,\n      expanded: !toggle && !item.disabled && item.expanded || toggle && expanded === item.id,\n      disabled: item.disabled,\n      square: square,\n      onChange: handleChange(item.id),\n      sx: {\n        ':before': {\n          opacity: 0\n        },\n        '&.Mui-expanded': {\n          margin: 0\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(MuiAccordionSummary, {\n        expandIcon: expandIcon || expandIcon === false ? expandIcon : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 91\n        }, this),\n        sx: {\n          color: theme.palette.mode === 'dark' ? theme.palette.grey[500] : theme.palette.grey[800],\n          fontWeight: 500,\n          borderBottom: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 28 : theme.palette.grey[200]\n        },\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MuiAccordionDetails, {\n        sx: {\n          p: '16px 8px'\n        },\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Accordion, \"TaYuAJQQ23IUvjcjRPlA0hADBhc=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Accordion;\nAccordion.propTypes = {\n  data: PropTypes.array,\n  defaultExpandedId: PropTypes.string,\n  expandIcon: PropTypes.object,\n  square: PropTypes.bool,\n  toggle: PropTypes.bool\n};\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/ui-component/extended/Accordion.js"],"names":["PropTypes","React","makeStyles","useTheme","MuiAccordion","MuiAccordionDetails","MuiAccordionSummary","ExpandMoreIcon","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Accordion","data","defaultExpandedId","expandIcon","square","toggle","classes","expanded","setExpanded","useState","handleChange","panel","event","newExpanded","useEffect","map","item","disabled","defaultExpand","id","opacity","margin","color","palette","mode","grey","borderBottom","borderColor","dark","light","title","p","content","propTypes","array","string","object","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\n\r\n// assets\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular\r\n    }\r\n}));\r\n\r\n// ===========================|| ACCORDION ||=========================== //\r\n\r\nconst Accordion = ({ data, defaultExpandedId, expandIcon, square, toggle }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [expanded, setExpanded] = React.useState(null);\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => toggle && setExpanded(newExpanded ? panel : false);\r\n\r\n    React.useEffect(() => {\r\n        setExpanded(defaultExpandedId);\r\n    }, [defaultExpandedId]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {data &&\r\n                data.map((item) => (\r\n                    <MuiAccordion\r\n                        key={item.id}\r\n                        defaultExpanded={!item.disabled && item.defaultExpand}\r\n                        expanded={(!toggle && !item.disabled && item.expanded) || (toggle && expanded === item.id)}\r\n                        disabled={item.disabled}\r\n                        square={square}\r\n                        onChange={handleChange(item.id)}\r\n                        sx={{\r\n                            ':before': {\r\n                                opacity: 0\r\n                            },\r\n                            '&.Mui-expanded': {\r\n                                margin: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MuiAccordionSummary\r\n                            expandIcon={expandIcon || expandIcon === false ? expandIcon : <ExpandMoreIcon />}\r\n                            sx={{\r\n                                color: theme.palette.mode === 'dark' ? theme.palette.grey[500] : theme.palette.grey[800],\r\n                                fontWeight: 500,\r\n                                borderBottom: '1px solid',\r\n                                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 28 : theme.palette.grey[200]\r\n                            }}\r\n                        >\r\n                            {item.title}\r\n                        </MuiAccordionSummary>\r\n                        <MuiAccordionDetails sx={{ p: '16px 8px' }}>{item.content}</MuiAccordionDetails>\r\n                    </MuiAccordion>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nAccordion.propTypes = {\r\n    data: PropTypes.array,\r\n    defaultExpandedId: PropTypes.string,\r\n    expandIcon: PropTypes.object,\r\n    square: PropTypes.bool,\r\n    toggle: PropTypes.bool\r\n};\r\n\r\nexport default Accordion;\r\n"]},"metadata":{},"sourceType":"module"}