{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect } from 'react'; // Striker Custom\n\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData'; // material-ui\n\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal'; // ==============================|| Page: Organization ||============================== //\n// <TreeNode label={<div>Production</div>}/>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orgchart = () => {\n  _s();\n\n  const [orgTree, setOrgTree] = useState();\n\n  function createTree() {\n    const myTree = new TreeClass(OrgChartData.organization);\n    OrgChartData.sections.forEach((section, i) => {\n      if (section.parent === 0) {\n        myTree.addChild(section);\n      } else {\n        myTree.getNodeById(section.parent).addChild(section);\n      }\n    });\n    return myTree;\n  }\n\n  useEffect(() => {\n    setOrgTree(createTree());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(MainCard, {\n            title: \"Organization\",\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: OrgChartData.organization.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"BAFB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 34\n              }, this),\n              children: () => {\n                function recurse(cur) {\n                  if (cur.children.length = 0) {\n                    console.log(cur.value.name);\n                    return /*#__PURE__*/_jsxDEV(TreeNode, {\n                      label: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: cur.value.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 48,\n                        columnNumber: 62\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 45\n                    }, this);\n                  } else {\n                    for (let i = 0; i < cur.children.length; i++) {\n                      recurse(cur.children[i]);\n                      console.log(cur.children[i].value.name);\n                      return /*#__PURE__*/_jsxDEV(TreeNode, {\n                        label: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: cur.children[i].value.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 53,\n                          columnNumber: 66\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 53,\n                        columnNumber: 49\n                      }, this);\n                    }\n                  }\n                }\n\n                return recurse(orgTree);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orgchart, \"cboRHm4+Fh5UnQhH/+AG3NVpE+0=\");\n\n_c = Orgchart;\nexport default Orgchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orgchart\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js"],"names":["React","useState","useEffect","TreeClass","OrgChartData","Typography","Grid","List","ListItem","Card","Button","Tree","TreeNode","gridSpacing","MainCard","SimpleModal","Orgchart","orgTree","setOrgTree","createTree","myTree","organization","sections","forEach","section","i","parent","addChild","getNodeById","name","recurse","cur","children","length","console","log","value"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState, useEffect} from 'react';\n\n// Striker Custom\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData';\n\n// material-ui\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal';\n\n\n// ==============================|| Page: Organization ||============================== //\n\n// <TreeNode label={<div>Production</div>}/>\nconst Orgchart = () => {\n    const [orgTree, setOrgTree] = useState();\n    function createTree() {\n        const myTree = new TreeClass(OrgChartData.organization);\n        OrgChartData.sections.forEach((section, i) => {\n        if (section.parent === 0) {\n            myTree.addChild(section)\n        } else {\n            myTree.getNodeById(section.parent).addChild(section)\n        }\n        })\n        return myTree\n    }\n    useEffect(() => {\n        setOrgTree(createTree());\n    }, [])\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={12}>\n                    <MainCard title=\"Organization\">\n                    <Tree label={<div><h1>{OrgChartData.organization.name}</h1><h2>BAFB</h2></div>}>\n                        {() => {\n                            function recurse(cur) {\n                                if (cur.children.length = 0) {\n                                    console.log(cur.value.name)\n                                    return (<TreeNode label={<div>{cur.value.name}</div>}/>)\n                                } else {\n                                    for (let i=0;i < cur.children.length;i++) {\n                                        recurse(cur.children[i])\n                                        console.log(cur.children[i].value.name)\n                                        return (<TreeNode label={<div>{cur.children[i].value.name}</div>}/>)\n                                    }\n                                }\n                            }\n                            return recurse(orgTree);\n                        }}\n                    </Tree>\n                    </MainCard>  \n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n)};\n\nexport default Orgchart;"]},"metadata":{},"sourceType":"module"}