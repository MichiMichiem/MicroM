{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UISnackbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { useTheme } from '@material-ui/styles';\nimport { Button, Grid } from '@material-ui/core'; // third party\n\nimport { useDispatch } from 'react-redux'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\nimport { SNACKBAR_OPEN } from 'store/actions'; // ==============================|| UI SNACKBAR ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UISnackbar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Snackbar\",\n    secondary: /*#__PURE__*/_jsxDEV(SecondaryAction, {\n      link: \"https://next.material-ui.com/components/snackbars/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 47\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Basic Snackbar\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is default message',\n                  variant: 'alert',\n                  alertSeverity: 'info',\n                  close: false\n                }),\n                children: \"Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Error',\n                  variant: 'alert',\n                  alertSeverity: 'error',\n                  close: false\n                }),\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"success\",\n                sx: {\n                  color: theme.palette.success.dark,\n                  borderColor: theme.palette.success.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Success',\n                  variant: 'alert',\n                  alertSeverity: 'success',\n                  close: false\n                }),\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"warning\",\n                sx: {\n                  color: theme.palette.warning.dark,\n                  borderColor: theme.palette.warning.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Warning',\n                  variant: 'alert',\n                  alertSeverity: 'warning',\n                  close: false\n                }),\n                children: \"Warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"With Close\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Default',\n                  variant: 'alert',\n                  alertSeverity: 'info'\n                }),\n                children: \"Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Error',\n                  variant: 'alert',\n                  alertSeverity: 'error'\n                }),\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"success\",\n                sx: {\n                  color: theme.palette.success.dark,\n                  borderColor: theme.palette.success.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Success',\n                  variant: 'alert',\n                  alertSeverity: 'success'\n                }),\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"warning\",\n                sx: {\n                  color: theme.palette.warning.dark,\n                  borderColor: theme.palette.warning.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Warning',\n                  variant: 'alert',\n                  alertSeverity: 'warning'\n                }),\n                children: \"Warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"With Close + Action\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Default',\n                  variant: 'alert',\n                  alertSeverity: 'info',\n                  actionButton: true\n                }),\n                children: \"Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Error',\n                  variant: 'alert',\n                  alertSeverity: 'error',\n                  actionButton: true\n                }),\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"success\",\n                sx: {\n                  color: theme.palette.success.dark,\n                  borderColor: theme.palette.success.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Success',\n                  variant: 'alert',\n                  alertSeverity: 'success',\n                  actionButton: true\n                }),\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"warning\",\n                sx: {\n                  color: theme.palette.warning.dark,\n                  borderColor: theme.palette.warning.dark\n                },\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is Warning',\n                  variant: 'alert',\n                  alertSeverity: 'warning',\n                  actionButton: true\n                }),\n                children: \"Warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Snackbar Position\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'left'\n                  },\n                  message: 'This is an top-left message!'\n                }),\n                children: \"Top-Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'center'\n                  },\n                  message: 'This is an top-center message!'\n                }),\n                children: \"Top-Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'right'\n                  },\n                  message: 'This is an top-right message!'\n                }),\n                children: \"Top-Right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  message: 'This is an bottom-right message!'\n                }),\n                children: \"Bottom-Right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center'\n                  },\n                  message: 'This is an bottom-center message!'\n                }),\n                children: \"Bottom-Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                  },\n                  message: 'This is an bottom-left message!'\n                }),\n                children: \"Bottom-Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Snackbar Trasition\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an fade message!',\n                  transition: 'Fade'\n                }),\n                children: \"Default/Fade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an slide-left message!',\n                  transition: 'SlideLeft'\n                }),\n                children: \"Slide Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an slide-up message!',\n                  transition: 'SlideUp'\n                }),\n                children: \"Slide Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an slide-right message!',\n                  transition: 'SlideRight'\n                }),\n                children: \"Slide Right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an slide-down message!',\n                  transition: 'SlideDown'\n                }),\n                children: \"Slide Down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => dispatch({\n                  type: SNACKBAR_OPEN,\n                  open: true,\n                  message: 'This is an grow message!',\n                  transition: 'Grow'\n                }),\n                children: \"Grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UISnackbar, \"8N2X1+e/z2+Oer+Hp3+bApmmx1Q=\", false, function () {\n  return [useDispatch, useTheme];\n});\n\n_c = UISnackbar;\nexport default UISnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UISnackbar\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UISnackbar.js"],"names":["React","useTheme","Button","Grid","useDispatch","SubCard","MainCard","SecondaryAction","gridSpacing","SNACKBAR_OPEN","UISnackbar","dispatch","theme","type","open","message","variant","alertSeverity","close","color","palette","success","dark","borderColor","warning","actionButton","anchorOrigin","vertical","horizontal","transition"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\n// third party\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// ==============================|| UI SNACKBAR ||============================== //\r\n\r\nconst UISnackbar = () => {\r\n    const dispatch = useDispatch();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <MainCard title=\"Snackbar\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/snackbars/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"Basic Snackbar\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is default message',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'info',\r\n                                            close: false\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"error\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Error',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'error',\r\n                                            close: false\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"success\"\r\n                                    sx={{ color: theme.palette.success.dark, borderColor: theme.palette.success.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Success',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'success',\r\n                                            close: false\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"warning\"\r\n                                    sx={{ color: theme.palette.warning.dark, borderColor: theme.palette.warning.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Warning',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'warning',\r\n                                            close: false\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"With Close\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Default',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'info'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"error\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Error',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'error'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"success\"\r\n                                    sx={{ color: theme.palette.success.dark, borderColor: theme.palette.success.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Success',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'success'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"warning\"\r\n                                    sx={{ color: theme.palette.warning.dark, borderColor: theme.palette.warning.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Warning',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'warning'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"With Close + Action\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Default',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'info',\r\n                                            actionButton: true\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"error\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Error',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'error',\r\n                                            actionButton: true\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"success\"\r\n                                    sx={{ color: theme.palette.success.dark, borderColor: theme.palette.success.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Success',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'success',\r\n                                            actionButton: true\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"warning\"\r\n                                    sx={{ color: theme.palette.warning.dark, borderColor: theme.palette.warning.dark }}\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is Warning',\r\n                                            variant: 'alert',\r\n                                            alertSeverity: 'warning',\r\n                                            actionButton: true\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Snackbar Position\">\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'top', horizontal: 'left' },\r\n                                            message: 'This is an top-left message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Top-Left\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'top', horizontal: 'center' },\r\n                                            message: 'This is an top-center message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Top-Center\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                            message: 'This is an top-right message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Top-Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\r\n                                            message: 'This is an bottom-right message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Bottom-Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\r\n                                            message: 'This is an bottom-center message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Bottom-Center\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\r\n                                            message: 'This is an bottom-left message!'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Bottom-Left\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Snackbar Trasition\">\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an fade message!',\r\n                                            transition: 'Fade'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Default/Fade\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an slide-left message!',\r\n                                            transition: 'SlideLeft'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Slide Left\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an slide-up message!',\r\n                                            transition: 'SlideUp'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Slide Up\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an slide-right message!',\r\n                                            transition: 'SlideRight'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Slide Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an slide-down message!',\r\n                                            transition: 'SlideDown'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Slide Down\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            type: SNACKBAR_OPEN,\r\n                                            open: true,\r\n                                            message: 'This is an grow message!',\r\n                                            transition: 'Grow'\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Grow\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UISnackbar;\r\n"]},"metadata":{},"sourceType":"module"}