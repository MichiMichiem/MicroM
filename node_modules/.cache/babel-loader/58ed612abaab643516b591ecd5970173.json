{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js\";\n\n/* eslint-disable */\nimport React, { useState } from 'react'; // Striker Custom\n\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData'; // material-ui\n\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal'; // ==============================|| Page: Organization ||============================== //\n// <TreeNode label={<div>Production</div>}>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orgchart = () => {\n  function createTree() {\n    const myTree = new TreeClass(OrgChartData.organization);\n    OrgChartData.sections.forEach((section, i) => {\n      if (section.parent === 0) {\n        myTree.addChild(section);\n      } else {\n        myTree.getNodeById(section.parent).addChild(section);\n      }\n    });\n    return myTree;\n  }\n\n  function renderTree() {\n    let orgTree = createTree();\n\n    function recurse(cur) {\n      if (cur.children.length > 0) {\n        for (let i = 0; i < cur.children.length; i++) {\n          recurse(cur.children[i]);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: cur.value.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    }\n\n    let retVal = recurse(orgTree);\n    console.log(retVal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(MainCard, {\n            title: \"Organization\",\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: OrgChartData.organization.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"BAFB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 34\n              }, this),\n              children: renderTree()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Orgchart;\nexport default Orgchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orgchart\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js"],"names":["React","useState","TreeClass","OrgChartData","Typography","Grid","List","ListItem","Card","Button","Tree","TreeNode","gridSpacing","MainCard","SimpleModal","Orgchart","createTree","myTree","organization","sections","forEach","section","i","parent","addChild","getNodeById","renderTree","orgTree","recurse","cur","children","length","value","name","retVal","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState} from 'react';\n\n// Striker Custom\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData';\n\n// material-ui\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SimpleModal from '../users/list/Style1/AddUserModal';\n\n\n// ==============================|| Page: Organization ||============================== //\n\n// <TreeNode label={<div>Production</div>}>\nconst Orgchart = () => {\n    function createTree() {\n        const myTree = new TreeClass(OrgChartData.organization);\n        OrgChartData.sections.forEach((section, i) => {\n        if (section.parent === 0) {\n            myTree.addChild(section)\n        } else {\n            myTree.getNodeById(section.parent).addChild(section)\n        }\n        })\n        return myTree\n    }\n    function renderTree() {\n        let orgTree = createTree();\n        function recurse(cur) {\n            if (cur.children.length > 0) {\n                for (let i=0;i < cur.children.length;i++) {\n                    recurse(cur.children[i])\n                }\n            }\n            return (<TreeNode label={<div>{cur.value.name}</div>}/>);\n        }\n        let retVal = recurse(orgTree);\n        console.log(retVal)\n    }\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={12}>\n                    <MainCard title=\"Organization\">\n                    <Tree label={<div><h1>{OrgChartData.organization.name}</h1><h2>BAFB</h2></div>}>\n                        {renderTree()}\n                    </Tree>\n                    </MainCard>  \n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n)};\n\nexport default Orgchart;"]},"metadata":{},"sourceType":"module"}