{"ast":null,"code":"var TreeClass = function (value) {\n  this.value = value;\n  this.children = [];\n};\n\n_c = TreeClass;\nTree.prototype.constructor = Tree;\n\nTree.prototype.addChild = function (value) {\n  let newChild = new Tree(value);\n  this.children.push(newChild);\n};\n\nTree.prototype.contains = function (target) {\n  var doesContain = false;\n\n  function recurse(cur) {\n    if (cur.value === target) {\n      doesContain = true;\n    } else {\n      for (let i = 0; i < cur.children.length; i++) {\n        if (cur.children[i].children !== []) {\n          current = cur.children[i];\n          recurse(current);\n        }\n      }\n    }\n  }\n\n  ;\n  recurse(this);\n\n  if (doesContain === true) {\n    return true;\n  } else {\n    return false;\n  }\n\n  ;\n};\n\nexport default TreeClass;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeClass\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/orgchart/Tree.js"],"names":["TreeClass","value","children","Tree","prototype","constructor","addChild","newChild","push","contains","target","doesContain","recurse","cur","i","length","current"],"mappings":"AAAA,IAAIA,SAAS,GAAG,UAASC,KAAT,EAAgB;AAC9B,OAAKA,KAAL,GAAaA,KAAb;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACD,CAHD;;KAAIF,S;AAIJG,IAAI,CAACC,SAAL,CAAeC,WAAf,GAA6BF,IAA7B;;AACAA,IAAI,CAACC,SAAL,CAAeE,QAAf,GAA0B,UAASL,KAAT,EAAgB;AACtC,MAAIM,QAAQ,GAAG,IAAIJ,IAAJ,CAASF,KAAT,CAAf;AACA,OAAKC,QAAL,CAAcM,IAAd,CAAmBD,QAAnB;AACH,CAHD;;AAKAJ,IAAI,CAACC,SAAL,CAAeK,QAAf,GAA0B,UAASC,MAAT,EAAiB;AACzC,MAAIC,WAAW,GAAG,KAAlB;;AACA,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,QAAIA,GAAG,CAACZ,KAAJ,KAAcS,MAAlB,EAA0B;AACxBC,MAAAA,WAAW,GAAG,IAAd;AACD,KAFD,MAEO;AACL,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAGD,GAAG,CAACX,QAAJ,CAAaa,MAA9B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAID,GAAG,CAACX,QAAJ,CAAaY,CAAb,EAAgBZ,QAAhB,KAA6B,EAAjC,EAAqC;AACnCc,UAAAA,OAAO,GAAGH,GAAG,CAACX,QAAJ,CAAaY,CAAb,CAAV;AACAF,UAAAA,OAAO,CAACI,OAAD,CAAP;AACD;AACF;AACF;AACF;;AAAA;AACDJ,EAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,MAAID,WAAW,KAAK,IAApB,EAA0B;AACxB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;;AAAA;AACF,CApBD;;AAqBA,eAAeX,SAAf","sourcesContent":["var TreeClass = function(value) {\n  this.value = value;\n  this.children = [];\n};\nTree.prototype.constructor = Tree\nTree.prototype.addChild = function(value) {\n    let newChild = new Tree(value);\n    this.children.push(newChild);\n};\n\nTree.prototype.contains = function(target) {\n  var doesContain = false;\n  function recurse(cur) {\n    if (cur.value === target) {\n      doesContain = true;\n    } else {\n      for (let i=0;i < cur.children.length;i++) {\n        if (cur.children[i].children !== []) {\n          current = cur.children[i]\n          recurse(current);\n        }\n      }\n    }\n  };\n  recurse(this);\n  if (doesContain === true) {\n    return true;\n  } else {\n    return false;\n  };\n};\nexport default TreeClass;"]},"metadata":{},"sourceType":"module"}