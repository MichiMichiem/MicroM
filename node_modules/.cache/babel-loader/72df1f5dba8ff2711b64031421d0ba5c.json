{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/ui-component/cards/Post/Comment/Reply/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react'; // material-ui\n\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Button, ButtonBase, Card, Grid, Menu, MenuItem, Stack, Typography } from '@material-ui/core'; // project imports\n\nimport Avatar from 'ui-component/extended/Avatar'; // assets\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport MoreVertTwoToneIcon from '@material-ui/icons/MoreVertTwoTone';\nimport ThumbUpAltTwoToneIcon from '@material-ui/icons/ThumbUpAltTwoTone';\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true); // style constant\n\n\nconst useStyles = makeStyles(theme => ({\n  textSecondary: {\n    color: theme.palette.secondary.main\n  },\n  avatarRight: { ...theme.typography.commonAvatar,\n    ...theme.typography.smallAvatar,\n    background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary.light,\n    color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.secondary.dark,\n    zIndex: 1,\n    transition: 'all .2s ease-in-out',\n    '&[aria-controls=\"menu-list-grow\"],&:hover': {\n      background: theme.palette.secondary.main,\n      color: theme.palette.secondary.light\n    }\n  },\n  profileComment: {\n    background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n    padding: '16px 16px 8px',\n    marginTop: '10px'\n  },\n  commentLevel1: {\n    marginLeft: '50px'\n  }\n})); // ===========================|| POST & COMMENT - REPLAY ||=========================== //\n\nconst Reply = ({\n  commentId,\n  handleReplayLikes,\n  onReply,\n  postId,\n  reply\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    id\n  } = reply;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const replies = reply;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(replies).length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentLevel1,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.profileComment,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                wrap: \"nowrap\",\n                alignItems: \"center\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 24,\n                      height: 24\n                    },\n                    size: \"small\",\n                    alt: \"User 1\",\n                    src: replies.profile && replies.profile.avatar && avatarImage(`./${replies.profile.avatar}`).default\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  zeroMinWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    alignItems: \"center\",\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        align: \"left\",\n                        variant: \"h5\",\n                        component: \"div\",\n                        children: replies.profile.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        align: \"left\",\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                          sx: {\n                            width: '10px',\n                            height: '10px',\n                            opacity: 0.5,\n                            m: '0 5px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 57\n                        }, this), ' ', replies.profile.time]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: classes.textActive,\n                  children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n                    sx: {\n                      borderRadius: '12px'\n                    },\n                    onClick: handleClick,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      variant: \"rounded\",\n                      className: classes.avatarRight,\n                      \"aria-controls\": \"menu-comment-reply\",\n                      \"aria-haspopup\": \"true\",\n                      children: /*#__PURE__*/_jsxDEV(MoreVertTwoToneIcon, {\n                        fontSize: \"inherit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                    id: \"menu-comment-reply\",\n                    anchorEl: anchorEl,\n                    keepMounted: true,\n                    open: Boolean(anchorEl),\n                    onClose: handleClose,\n                    variant: \"selectedMenu\",\n                    anchorOrigin: {\n                      vertical: 'bottom',\n                      horizontal: 'right'\n                    },\n                    transformOrigin: {\n                      vertical: 'top',\n                      horizontal: 'right'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      onClick: handleClose,\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      onClick: handleClose,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"left\",\n                variant: \"body2\",\n                children: replies.data.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 2,\n                sx: {\n                  color: theme.palette.mode === 'dark' ? 'grey.700' : theme.palette.grey[800]\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleReplayLikes(postId, commentId, id),\n                  variant: \"text\",\n                  color: \"inherit\",\n                  size: \"small\",\n                  startIcon: /*#__PURE__*/_jsxDEV(ThumbUpAltTwoToneIcon, {\n                    className: replies.data.likes && replies.data.likes.like ? classes.textSecondary : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this),\n                  children: [replies.data.likes && replies.data.likes.value ? replies.data.likes.value : 0, \" likes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: onReply,\n                  size: \"small\",\n                  color: \"inherit\",\n                  startIcon: /*#__PURE__*/_jsxDEV(ReplyTwoToneIcon, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 56\n                  }, this),\n                  children: \"reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reply, \"+7Rr7EP19LboEDSCNwbkjr0kIxw=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Reply;\nReply.propTypes = {\n  commentId: PropTypes.string,\n  handleReplayLikes: PropTypes.func,\n  onReply: PropTypes.func,\n  postId: PropTypes.string,\n  reply: PropTypes.object\n};\nexport default Reply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/ui-component/cards/Post/Comment/Reply/index.js"],"names":["PropTypes","React","makeStyles","useTheme","Button","ButtonBase","Card","Grid","Menu","MenuItem","Stack","Typography","Avatar","FiberManualRecordIcon","MoreVertTwoToneIcon","ThumbUpAltTwoToneIcon","ReplyTwoToneIcon","avatarImage","require","context","useStyles","theme","textSecondary","color","palette","secondary","main","avatarRight","typography","commonAvatar","smallAvatar","background","mode","dark","light","zIndex","transition","profileComment","grey","padding","marginTop","commentLevel1","marginLeft","Reply","commentId","handleReplayLikes","onReply","postId","reply","classes","id","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","replies","Object","keys","length","width","height","profile","avatar","default","name","opacity","m","time","textActive","borderRadius","Boolean","vertical","horizontal","data","comment","likes","like","value","propTypes","string","func","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Button, ButtonBase, Card, Grid, Menu, MenuItem, Stack, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\n\r\n// assets\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport MoreVertTwoToneIcon from '@material-ui/icons/MoreVertTwoTone';\r\nimport ThumbUpAltTwoToneIcon from '@material-ui/icons/ThumbUpAltTwoTone';\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    textSecondary: {\r\n        color: theme.palette.secondary.main\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.smallAvatar,\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary.light,\r\n        color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.secondary.dark,\r\n        zIndex: 1,\r\n        transition: 'all .2s ease-in-out',\r\n        '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n            background: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.light\r\n        }\r\n    },\r\n    profileComment: {\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        padding: '16px 16px 8px',\r\n        marginTop: '10px'\r\n    },\r\n    commentLevel1: {\r\n        marginLeft: '50px'\r\n    }\r\n}));\r\n\r\n// ===========================|| POST & COMMENT - REPLAY ||=========================== //\r\n\r\nconst Reply = ({ commentId, handleReplayLikes, onReply, postId, reply }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { id } = reply;\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const replies = reply;\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(replies).length > 0 && (\r\n                <Grid item xs={12}>\r\n                    <div className={classes.commentLevel1}>\r\n                        <Card className={classes.profileComment}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Avatar\r\n                                                sx={{ width: 24, height: 24 }}\r\n                                                size=\"small\"\r\n                                                alt=\"User 1\"\r\n                                                src={\r\n                                                    replies.profile &&\r\n                                                    replies.profile.avatar &&\r\n                                                    avatarImage(`./${replies.profile.avatar}`).default\r\n                                                }\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Grid container alignItems=\"center\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Typography align=\"left\" variant=\"h5\" component=\"div\">\r\n                                                        {replies.profile.name}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Typography align=\"left\" variant=\"caption\">\r\n                                                        <FiberManualRecordIcon\r\n                                                            sx={{ width: '10px', height: '10px', opacity: 0.5, m: '0 5px' }}\r\n                                                        />{' '}\r\n                                                        {replies.profile.time}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item className={classes.textActive}>\r\n                                            <ButtonBase sx={{ borderRadius: '12px' }} onClick={handleClick}>\r\n                                                <Avatar\r\n                                                    variant=\"rounded\"\r\n                                                    className={classes.avatarRight}\r\n                                                    aria-controls=\"menu-comment-reply\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                >\r\n                                                    <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                                </Avatar>\r\n                                            </ButtonBase>\r\n                                            <Menu\r\n                                                id=\"menu-comment-reply\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleClose}\r\n                                                variant=\"selectedMenu\"\r\n                                                anchorOrigin={{\r\n                                                    vertical: 'bottom',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                                transformOrigin={{\r\n                                                    vertical: 'top',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                                            </Menu>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography align=\"left\" variant=\"body2\">\r\n                                        {replies.data.comment}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Stack\r\n                                        direction=\"row\"\r\n                                        spacing={2}\r\n                                        sx={{ color: theme.palette.mode === 'dark' ? 'grey.700' : theme.palette.grey[800] }}\r\n                                    >\r\n                                        <Button\r\n                                            onClick={() => handleReplayLikes(postId, commentId, id)}\r\n                                            variant=\"text\"\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            startIcon={\r\n                                                <ThumbUpAltTwoToneIcon\r\n                                                    className={replies.data.likes && replies.data.likes.like ? classes.textSecondary : null}\r\n                                                />\r\n                                            }\r\n                                        >\r\n                                            {replies.data.likes && replies.data.likes.value ? replies.data.likes.value : 0} likes\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"text\"\r\n                                            onClick={onReply}\r\n                                            size=\"small\"\r\n                                            color=\"inherit\"\r\n                                            startIcon={<ReplyTwoToneIcon color=\"primary\" />}\r\n                                        >\r\n                                            reply\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nReply.propTypes = {\r\n    commentId: PropTypes.string,\r\n    handleReplayLikes: PropTypes.func,\r\n    onReply: PropTypes.func,\r\n    postId: PropTypes.string,\r\n    reply: PropTypes.object\r\n};\r\n\r\nexport default Reply;\r\n"]},"metadata":{},"sourceType":"module"}