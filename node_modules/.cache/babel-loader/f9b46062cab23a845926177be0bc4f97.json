{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/mm2/MicroM/src/views/ui-elements/basic/UIList/VirtualizedList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport ListItemButton from '@material-ui/core/ListItemButton';\nimport ListItemText from '@material-ui/core/ListItemText'; // third party\n\nimport { FixedSizeList } from 'react-window'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 270,\n    backgroundColor: theme.palette.background.paper\n  }\n})); // list render\n\nfunction renderRow(props) {\n  const {\n    index,\n    style\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: `Item ${index + 1}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired\n}; // ================================|| UI LIST - SCROLLABLE ||================================ //\n\nexport default function VirtualizedList() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 280,\n      width: \"auto\",\n      itemSize: 46,\n      itemCount: 200,\n      children: renderRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VirtualizedList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = VirtualizedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VirtualizedList\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/mm2/MicroM/src/views/ui-elements/basic/UIList/VirtualizedList.js"],"names":["React","PropTypes","makeStyles","ListItemButton","ListItemText","FixedSizeList","useStyles","theme","root","width","height","backgroundColor","palette","background","paper","renderRow","props","index","style","propTypes","number","isRequired","object","VirtualizedList","classes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,MAAM,EAAE,GAFN;AAGFC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC;AAD+B,CAAZ,CAAD,CAA5B,C,CAQA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AAEA,sBACI,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEE,KAAvB;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAG,QAAOD,KAAK,GAAG,CAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ,KAAmCA,KAAnC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAEDF,SAAS,CAACI,SAAV,GAAsB;AAClBF,EAAAA,KAAK,EAAEhB,SAAS,CAACmB,MAAV,CAAiBC,UADN;AAElBH,EAAAA,KAAK,EAAEjB,SAAS,CAACqB,MAAV,CAAiBD;AAFN,CAAtB,C,CAKA;;AAEA,eAAe,SAASE,eAAT,GAA2B;AAAA;;AACtC,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,GAAvB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAE,EAAnD;AAAuD,MAAA,SAAS,EAAE,GAAlE;AAAA,gBACKO;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAVuBQ,e;UACJjB,S;;;KADIiB,e","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ListItemButton from '@material-ui/core/ListItemButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n// third party\r\nimport { FixedSizeList } from 'react-window';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 270,\r\n        backgroundColor: theme.palette.background.paper\r\n    }\r\n}));\r\n\r\n// list render\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        <ListItemButton style={style} key={index}>\r\n            <ListItemText primary={`Item ${index + 1}`} />\r\n        </ListItemButton>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired\r\n};\r\n\r\n// ================================|| UI LIST - SCROLLABLE ||================================ //\r\n\r\nexport default function VirtualizedList() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FixedSizeList height={280} width=\"auto\" itemSize={46} itemCount={200}>\r\n                {renderRow}\r\n            </FixedSizeList>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}