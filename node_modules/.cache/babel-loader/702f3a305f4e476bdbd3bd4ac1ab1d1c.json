{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UIDialog/MaxWidthDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, InputLabel, MenuItem, Select, Switch, Typography } from '@material-ui/core'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n})); // ===============================|| UI DIALOG - SIZE VARIANTS ||=============================== //\n\nexport default function MaxWidthDialog() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const [fullWidth, setFullWidth] = React.useState(true);\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open max-width dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        children: \"Optional Sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"You can set my maximum width and whether to adapt or not.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"max-width\",\n              children: \"maxWidth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              autoFocus: true,\n              value: maxWidth,\n              label: \"Max Width\",\n              onChange: handleMaxWidthChange,\n              inputProps: {\n                name: 'max-width',\n                id: 'max-width'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xs\",\n                children: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"sm\",\n                children: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"md\",\n                children: \"md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lg\",\n                children: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xl\",\n                children: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: classes.formControlLabel,\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: fullWidth,\n              onChange: handleFullWidthChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 38\n            }, this),\n            label: \"Full width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          pr: 2.5\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"error\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MaxWidthDialog, \"HPT6b/XgANDML/zYtNZPHP6mc7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = MaxWidthDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaxWidthDialog\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/ui-elements/advance/UIDialog/MaxWidthDialog.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","Typography","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","MaxWidthDialog","classes","open","setOpen","useState","handleClickOpen","handleClose","maxWidth","setMaxWidth","handleMaxWidthChange","event","target","value","fullWidth","setFullWidth","handleFullWidthChange","checked","name","id","pr"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content'\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n// ===============================|| UI DIALOG - SIZE VARIANTS ||=============================== //\r\n\r\nexport default function MaxWidthDialog() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [maxWidth, setMaxWidth] = React.useState('sm');\r\n    const handleMaxWidthChange = (event) => {\r\n        setMaxWidth(event.target.value);\r\n    };\r\n\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const handleFullWidthChange = (event) => {\r\n        setFullWidth(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose} aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle id=\"max-width-dialog-title\">Optional Sizes</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"body2\">You can set my maximum width and whether to adapt or not.</Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                            <Select\r\n                                autoFocus\r\n                                value={maxWidth}\r\n                                label=\"Max Width\"\r\n                                onChange={handleMaxWidthChange}\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width'\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            className={classes.formControlLabel}\r\n                            control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n                            label=\"Full width\"\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button onClick={handleClose} color=\"error\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}