{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js\";\n\n/* eslint-disable */\nimport React, { useState, useEffect } from 'react'; // Striker Custom\n\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData';\nimport Child from './child'; // material-ui\n\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant';\nimport MuiTypography from '@material-ui/core/Typography'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport TeamMembers from './TeamMembers'; // ==============================|| Page: Organization ||============================== //\n// <TreeNode label={<div>Production</div>}/>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Orgchart = () => {\n  // convert array of sections into a Tree.\n  const orgTree = new TreeClass(OrgChartData.organization);\n  OrgChartData.sections.forEach(section => {\n    if (section.parent_section_id === 0) {\n      orgTree.addChild(section);\n    } else {\n      orgTree.getNodeById(section.parent_section_id).addChild(section);\n    }\n  }); // Call function to render the tree.\n\n  function renderTree(cur) {\n    if (cur.children.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(Child, {\n        children: cur.children,\n        users: OrgChartData.users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(MainCard, {\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              lineWidth: '3px',\n              lineColor: \"theme.palette.primary.dark\",\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MuiTypography, {\n                  variant: \"h1\",\n                  gutterBottom: true,\n                  children: OrgChartData.organization.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MuiTypography, {\n                  variant: \"h2\",\n                  gutterBottom: true,\n                  children: OrgChartData.organization.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true),\n              children: renderTree(orgTree)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Orgchart;\nexport default Orgchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orgchart\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/views/application/orgchart/index.js"],"names":["React","useState","useEffect","TreeClass","OrgChartData","Child","Typography","Grid","List","ListItem","Card","Button","Tree","TreeNode","gridSpacing","MuiTypography","MainCard","TeamMembers","Orgchart","orgTree","organization","sections","forEach","section","parent_section_id","addChild","getNodeById","renderTree","cur","children","length","users","name","location"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAGA;AAEA;;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB;AACA,QAAMC,OAAO,GAAG,IAAIhB,SAAJ,CAAcC,YAAY,CAACgB,YAA3B,CAAhB;AACAhB,EAAAA,YAAY,CAACiB,QAAb,CAAsBC,OAAtB,CAA+BC,OAAD,IAAa;AACvC,QAAIA,OAAO,CAACC,iBAAR,KAA8B,CAAlC,EAAqC;AACjCL,MAAAA,OAAO,CAACM,QAAR,CAAiBF,OAAjB;AACH,KAFD,MAEO;AACHJ,MAAAA,OAAO,CAACO,WAAR,CAAoBH,OAAO,CAACC,iBAA5B,EAA+CC,QAA/C,CAAwDF,OAAxD;AACH;AACJ,GAND,EAHmB,CAWnB;;AACA,WAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,QAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,0BAAO,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEF,GAAG,CAACC,QAArB;AAA+B,QAAA,KAAK,EAAEzB,YAAY,CAAC2B;AAAnD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AACD,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEjB,WAAzB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAEA,WAAzB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACA,QAAC,QAAD;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,SAAS,EAAE,KAAjB;AAAwB,cAAA,SAAS,EAAE,4BAAnC;AAAiE,cAAA,KAAK,eAAE;AAAA,wCACxD,QAAC,aAAD;AAAe,kBAAA,OAAO,EAAC,IAAvB;AAA4B,kBAAA,YAAY,MAAxC;AAAA,4BACKV,YAAY,CAACgB,YAAb,CAA0BY;AAD/B;AAAA;AAAA;AAAA;AAAA,wBADwD,eAIxD,QAAC,aAAD;AAAe,kBAAA,OAAO,EAAC,IAAvB;AAA4B,kBAAA,YAAY,MAAxC;AAAA,4BACK5B,YAAY,CAACgB,YAAb,CAA0Ba;AAD/B;AAAA;AAAA;AAAA;AAAA,wBAJwD;AAAA,8BAAxE;AAAA,wBASKN,UAAU,CAACR,OAAD;AATf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBF,CAvCF;;KAAMD,Q;AAyCN,eAAeA,QAAf","sourcesContent":["/* eslint-disable */\nimport React, {useState, useEffect} from 'react';\n\n// Striker Custom\nimport TreeClass from './Tree';\nimport OrgChartData from './SampleData';\nimport Child from './child';\n// material-ui\nimport { Typography, Grid, List, ListItem, Card, Button } from '@material-ui/core';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { gridSpacing } from '../../../store/constant'\nimport MuiTypography from '@material-ui/core/Typography';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TeamMembers from './TeamMembers'\n\n\n// ==============================|| Page: Organization ||============================== //\n\n// <TreeNode label={<div>Production</div>}/>\nconst Orgchart = () => {\n    // convert array of sections into a Tree.\n    const orgTree = new TreeClass(OrgChartData.organization);\n    OrgChartData.sections.forEach((section) => {\n        if (section.parent_section_id === 0) {\n            orgTree.addChild(section)\n        } else {\n            orgTree.getNodeById(section.parent_section_id).addChild(section)\n        }\n    })\n\n    // Call function to render the tree.\n    function renderTree(cur) {\n        if (cur.children.length !== 0) {\n            return <Child children={cur.children} users={OrgChartData.users}/>\n        }\n    }\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={12}>\n                    <MainCard>\n                    <Tree lineWidth={'3px'} lineColor={\"theme.palette.primary.dark\"} label={<>\n                                    <MuiTypography variant=\"h1\" gutterBottom>\n                                        {OrgChartData.organization.name}\n                                    </MuiTypography>\n                                    <MuiTypography variant=\"h2\" gutterBottom>\n                                        {OrgChartData.organization.location}\n                                    </MuiTypography>\n                                </>\n                    }>\n                        {renderTree(orgTree)}\n                    </Tree>\n                    </MainCard>  \n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n)};\n\nexport default Orgchart;"]},"metadata":{},"sourceType":"module"}