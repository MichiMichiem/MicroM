{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/layout/Customization/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@material-ui/styles';\nimport { Avatar, ButtonBase, Drawer, Fab, FormControl, FormControlLabel, FormLabel, Grid, IconButton, Radio, RadioGroup, Slider, Stack, Switch, TextField, Tooltip, Typography, Button } from '@material-ui/core'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { MENU_TYPE, PRESET_COLORS, SET_BORDER_RADIUS, SET_FONT_FAMILY, SET_OUTLINED_FILLED } from 'store/actions'; // THEME_RTL\n\nimport { gridSpacing } from 'store/constant'; // color import\n\nimport colors from 'assets/scss/_themes-vars.module.scss';\nimport theme1 from 'assets/scss/_theme1.module.scss';\nimport theme2 from 'assets/scss/_theme2.module.scss';\nimport theme3 from 'assets/scss/_theme3.module.scss';\nimport theme4 from 'assets/scss/_theme4.module.scss';\nimport theme5 from 'assets/scss/_theme5.module.scss';\nimport theme6 from 'assets/scss/_theme6.module.scss'; // assets\n\nimport { IconChecks, IconSettings } from '@tabler/icons'; // concat 'px'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction valueText(value) {\n  return `${value}px`;\n}\n\nconst PresetColor = ({\n  color,\n  presetColor,\n  setPresetColor\n}) => /*#__PURE__*/_jsxDEV(Grid, {\n  item: true,\n  children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n    sx: {\n      borderRadius: '122px'\n    },\n    onClick: () => setPresetColor(color.id),\n    children: /*#__PURE__*/_jsxDEV(Avatar, {\n      variant: \"rounded\",\n      color: \"inherit\",\n      sx: {\n        background: `linear-gradient(135deg, ${color.primary} 50%,  ${color.secondary}  50%)`,\n        opacity: presetColor === color.id ? 0.6 : 1\n      },\n      children: presetColor === color.id && /*#__PURE__*/_jsxDEV(IconChecks, {\n        color: \"#fff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this);\n\n_c = PresetColor;\nPresetColor.propTypes = {\n  color: PropTypes.shape({\n    id: PropTypes.string,\n    primary: PropTypes.string,\n    secondary: PropTypes.string\n  }),\n  presetColor: PropTypes.string,\n  setPresetColor: PropTypes.func\n}; // ===========================|| LIVE CUSTOMIZATION ||=========================== //\n\nconst Customization = () => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const customization = useSelector(state => state.customization); // drawer on/off\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleToggle = () => {\n    setOpen(!open);\n  }; // state - layout type\n\n\n  const [navTypeConfig, setNavTypeConfig] = React.useState(customization.navType);\n  useEffect(() => dispatch({\n    type: MENU_TYPE,\n    navType: navTypeConfig\n  }), [dispatch, navTypeConfig]); // state - preset color\n\n  const [presetColorConfig, setPresetColorConfig] = React.useState(customization.presetColor);\n  useEffect(() => dispatch({\n    type: PRESET_COLORS,\n    presetColor: presetColorConfig\n  }), [dispatch, presetColorConfig]); // state - border radius\n\n  const [borderRadiusConfig, setBorderRadiusConfig] = React.useState(customization.borderRadius);\n\n  const handleBorderRadius = (event, newValue) => setBorderRadiusConfig(newValue);\n\n  useEffect(() => dispatch({\n    type: SET_BORDER_RADIUS,\n    borderRadius: borderRadiusConfig\n  }), [dispatch, borderRadiusConfig]); // state - filled with outline textfield\n\n  const [outlinedFilledConfig, setOutlinedFilledConfig] = React.useState(customization.outlinedFilled);\n\n  const handleOutlinedFilled = event => setOutlinedFilledConfig(event.target.checked);\n\n  useEffect(() => dispatch({\n    type: SET_OUTLINED_FILLED,\n    outlinedFilled: outlinedFilledConfig\n  }), [dispatch, outlinedFilledConfig]); // state - RTL layout\n  // const [rtlLayout, setRtlLayout] = React.useState(customization.rtlLayout);\n  // const handleRtlLayout = (event) => {\n  //     setRtlLayout(event.target.checked);\n  // };\n\n  if (customization.rtlLayout) {\n    document.querySelector('body').setAttribute('dir', 'rtl');\n  } // useEffect(() => {\n  //     dispatch({ type: THEME_RTL, rtlLayout: rtlLayout });\n  // }, [dispatch, rtlLayout]);\n\n\n  let initialFont;\n\n  switch (customization.fontFamily) {\n    case `'Inter', sans-serif`:\n      initialFont = 'Inter';\n      break;\n\n    case `'Poppins', sans-serif`:\n      initialFont = 'Poppins';\n      break;\n\n    case `'Roboto', sans-serif`:\n    default:\n      initialFont = 'Roboto';\n      break;\n  } // state - font family\n\n\n  const [fontFamily, setFontFamily] = React.useState(initialFont);\n  useEffect(() => {\n    let newFont;\n\n    switch (fontFamily) {\n      case 'Inter':\n        newFont = `'Inter', sans-serif`;\n        break;\n\n      case 'Poppins':\n        newFont = `'Poppins', sans-serif`;\n        break;\n\n      case 'Roboto':\n      default:\n        newFont = `'Roboto', sans-serif`;\n        break;\n    }\n\n    dispatch({\n      type: SET_FONT_FAMILY,\n      fontFamily: newFont\n    });\n  }, [dispatch, fontFamily]);\n  const colorOptions = [{\n    id: 'default',\n    primary: theme.palette.mode === 'dark' ? colors.darkPrimaryMain : colors.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? colors.darkSecondaryMain : colors.secondaryMain\n  }, {\n    id: 'theme1',\n    primary: theme.palette.mode === 'dark' ? theme1.darkPrimaryMain : theme1.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme1.darkSecondaryMain : theme1.secondaryMain\n  }, {\n    id: 'theme2',\n    primary: theme.palette.mode === 'dark' ? theme2.darkPrimaryMain : theme2.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme2.darkSecondaryMain : theme2.secondaryMain\n  }, {\n    id: 'theme3',\n    primary: theme.palette.mode === 'dark' ? theme3.darkPrimaryMain : theme3.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme3.darkSecondaryMain : theme3.secondaryMain\n  }, {\n    id: 'theme4',\n    primary: theme.palette.mode === 'dark' ? theme4.darkPrimaryMain : theme4.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme4.darkSecondaryMain : theme4.secondaryMain\n  }, {\n    id: 'theme5',\n    primary: theme.palette.mode === 'dark' ? theme5.darkPrimaryMain : theme5.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme5.darkSecondaryMain : theme5.secondaryMain\n  }, {\n    id: 'theme6',\n    primary: theme.palette.mode === 'dark' ? theme6.darkPrimaryMain : theme6.primaryMain,\n    secondary: theme.palette.mode === 'dark' ? theme6.darkSecondaryMain : theme6.secondaryMain\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Live Customize\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        component: \"div\",\n        onClick: handleToggle,\n        size: \"medium\",\n        variant: \"string\",\n        color: \"primary\",\n        sx: {// bottom: 0,\n          // m: 4,\n          // position: 'fixed',\n          // right: 20,\n          // zIndex: theme.zIndex.speedDial,\n          // boxShadow: theme.customShadows.secondary\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Customize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      onClose: handleToggle,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 280\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Layout\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  row: true,\n                  \"aria-label\": \"layout\",\n                  value: navTypeConfig,\n                  onChange: e => setNavTypeConfig(e.target.value),\n                  name: \"row-radio-buttons-group\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"light\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Light\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: 'grey.900'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"dark\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Dark\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: 'grey.900'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Preset Color\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                children: colorOptions.map((color, index) => /*#__PURE__*/_jsxDEV(PresetColor, {\n                  color: color,\n                  presetColor: presetColorConfig,\n                  setPresetColor: setPresetColorConfig\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Font Family\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"font-family\",\n                  value: fontFamily,\n                  onChange: e => setFontFamily(e.target.value),\n                  name: \"row-radio-buttons-group\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Roboto\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Roboto\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: 'grey.900'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Poppins\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Poppins\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: 'grey.900'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Inter\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Inter\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: 'grey.900'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Border Radius\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                sx: {\n                  mt: 2.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"secondary\",\n                    children: \"4px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Slider, {\n                    size: \"small\",\n                    value: borderRadiusConfig,\n                    onChange: handleBorderRadius,\n                    getAriaValueText: valueText,\n                    valueLabelDisplay: \"on\",\n                    \"aria-labelledby\": \"discrete-slider-small-steps\",\n                    marks: true,\n                    step: 2,\n                    min: 4,\n                    max: 24,\n                    color: \"secondary\",\n                    sx: {\n                      '& .MuiSlider-valueLabel': {\n                        color: theme.palette.mode === 'dark' ? 'secondary.dark' : 'secondary.light'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"secondary\",\n                    children: \"24px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Input Outlined With Filled\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Switch, {\n                      checked: outlinedFilledConfig,\n                      onChange: handleOutlinedFilled,\n                      inputProps: {\n                        'aria-label': 'controlled'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      id: \"outlined-basic\",\n                      label: outlinedFilledConfig ? 'With Background' : 'Without Background'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Customization, \"DPeYVqPrzOVuFDUWvERWauiwSLQ=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c2 = Customization;\nexport default Customization;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PresetColor\");\n$RefreshReg$(_c2, \"Customization\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/javascript 2/skeleton/src/layout/Customization/index.js"],"names":["PropTypes","React","useEffect","useDispatch","useSelector","useTheme","Avatar","ButtonBase","Drawer","Fab","FormControl","FormControlLabel","FormLabel","Grid","IconButton","Radio","RadioGroup","Slider","Stack","Switch","TextField","Tooltip","Typography","Button","PerfectScrollbar","SubCard","AnimateButton","MENU_TYPE","PRESET_COLORS","SET_BORDER_RADIUS","SET_FONT_FAMILY","SET_OUTLINED_FILLED","gridSpacing","colors","theme1","theme2","theme3","theme4","theme5","theme6","IconChecks","IconSettings","valueText","value","PresetColor","color","presetColor","setPresetColor","borderRadius","id","background","primary","secondary","opacity","propTypes","shape","string","func","Customization","theme","dispatch","customization","state","open","setOpen","useState","handleToggle","navTypeConfig","setNavTypeConfig","navType","type","presetColorConfig","setPresetColorConfig","borderRadiusConfig","setBorderRadiusConfig","handleBorderRadius","event","newValue","outlinedFilledConfig","setOutlinedFilledConfig","outlinedFilled","handleOutlinedFilled","target","checked","rtlLayout","document","querySelector","setAttribute","initialFont","fontFamily","setFontFamily","newFont","colorOptions","palette","mode","darkPrimaryMain","primaryMain","darkSecondaryMain","secondaryMain","sx","width","p","e","fontSize","map","index","mt"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACIC,MADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,GAJJ,EAKIC,WALJ,EAMIC,gBANJ,EAOIC,SAPJ,EAQIC,IARJ,EASIC,UATJ,EAUIC,KAVJ,EAWIC,UAXJ,EAYIC,MAZJ,EAaIC,KAbJ,EAcIC,MAdJ,EAeIC,SAfJ,EAgBIC,OAhBJ,EAiBIC,UAjBJ,EAkBIC,MAlBJ,QAmBO,mBAnBP,C,CAqBA;;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,iBAAnC,EAAsDC,eAAtD,EAAuEC,mBAAvE,QAAkG,eAAlG,C,CAAmH;;AACnH,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,eAAzC,C,CAEA;;;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,SAAQ,GAAEA,KAAM,IAAhB;AACH;;AAED,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA;AAAtB,CAAD,kBAChB,QAAC,IAAD;AAAM,EAAA,IAAI,MAAV;AAAA,yBACI,QAAC,UAAD;AAAY,IAAA,EAAE,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAhB;AAA2C,IAAA,OAAO,EAAE,MAAMD,cAAc,CAACF,KAAK,CAACI,EAAP,CAAxE;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,EAAE,EAAE;AACAC,QAAAA,UAAU,EAAG,2BAA0BL,KAAK,CAACM,OAAQ,UAASN,KAAK,CAACO,SAAU,QAD9E;AAEAC,QAAAA,OAAO,EAAEP,WAAW,KAAKD,KAAK,CAACI,EAAtB,GAA2B,GAA3B,GAAiC;AAF1C,OAHR;AAAA,gBAQKH,WAAW,KAAKD,KAAK,CAACI,EAAtB,iBAA4B,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AARjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,W;AAiBNA,WAAW,CAACU,SAAZ,GAAwB;AACpBT,EAAAA,KAAK,EAAE7C,SAAS,CAACuD,KAAV,CAAgB;AACnBN,IAAAA,EAAE,EAAEjD,SAAS,CAACwD,MADK;AAEnBL,IAAAA,OAAO,EAAEnD,SAAS,CAACwD,MAFA;AAGnBJ,IAAAA,SAAS,EAAEpD,SAAS,CAACwD;AAHF,GAAhB,CADa;AAMpBV,EAAAA,WAAW,EAAE9C,SAAS,CAACwD,MANH;AAOpBT,EAAAA,cAAc,EAAE/C,SAAS,CAACyD;AAPN,CAAxB,C,CAUA;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGtD,QAAQ,EAAtB;AACA,QAAMuD,QAAQ,GAAGzD,WAAW,EAA5B;AACA,QAAM0D,aAAa,GAAGzD,WAAW,CAAE0D,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC,CAHwB,CAKxB;;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB/D,KAAK,CAACgE,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD,CAPwB,CAWxB;;;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCnE,KAAK,CAACgE,QAAN,CAAeJ,aAAa,CAACQ,OAA7B,CAA1C;AACAnE,EAAAA,SAAS,CAAC,MAAM0D,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE3C,SAAR;AAAmB0C,IAAAA,OAAO,EAAEF;AAA5B,GAAD,CAAf,EAA8D,CAACP,QAAD,EAAWO,aAAX,CAA9D,CAAT,CAbwB,CAexB;;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CvE,KAAK,CAACgE,QAAN,CAAeJ,aAAa,CAACf,WAA7B,CAAlD;AACA5C,EAAAA,SAAS,CAAC,MAAM0D,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE1C,aAAR;AAAuBkB,IAAAA,WAAW,EAAEyB;AAApC,GAAD,CAAf,EAA0E,CAACX,QAAD,EAAWW,iBAAX,CAA1E,CAAT,CAjBwB,CAmBxB;;AACA,QAAM,CAACE,kBAAD,EAAqBC,qBAArB,IAA8CzE,KAAK,CAACgE,QAAN,CAAeJ,aAAa,CAACb,YAA7B,CAApD;;AACA,QAAM2B,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBH,qBAAqB,CAACG,QAAD,CAArE;;AAEA3E,EAAAA,SAAS,CAAC,MAAM0D,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEzC,iBAAR;AAA2BmB,IAAAA,YAAY,EAAEyB;AAAzC,GAAD,CAAf,EAAgF,CAACb,QAAD,EAAWa,kBAAX,CAAhF,CAAT,CAvBwB,CAyBxB;;AACA,QAAM,CAACK,oBAAD,EAAuBC,uBAAvB,IAAkD9E,KAAK,CAACgE,QAAN,CAAeJ,aAAa,CAACmB,cAA7B,CAAxD;;AACA,QAAMC,oBAAoB,GAAIL,KAAD,IAAWG,uBAAuB,CAACH,KAAK,CAACM,MAAN,CAAaC,OAAd,CAA/D;;AAEAjF,EAAAA,SAAS,CAAC,MAAM0D,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEvC,mBAAR;AAA6BiD,IAAAA,cAAc,EAAEF;AAA7C,GAAD,CAAf,EAAsF,CAAClB,QAAD,EAAWkB,oBAAX,CAAtF,CAAT,CA7BwB,CA+BxB;AACA;AACA;AACA;AACA;;AAEA,MAAIjB,aAAa,CAACuB,SAAlB,EAA6B;AACzBC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,YAA/B,CAA4C,KAA5C,EAAmD,KAAnD;AACH,GAvCuB,CAyCxB;AACA;AACA;;;AAEA,MAAIC,WAAJ;;AACA,UAAQ3B,aAAa,CAAC4B,UAAtB;AACI,SAAM,qBAAN;AACID,MAAAA,WAAW,GAAG,OAAd;AACA;;AACJ,SAAM,uBAAN;AACIA,MAAAA,WAAW,GAAG,SAAd;AACA;;AACJ,SAAM,sBAAN;AACA;AACIA,MAAAA,WAAW,GAAG,QAAd;AACA;AAVR,GA9CwB,CA2DxB;;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BzF,KAAK,CAACgE,QAAN,CAAeuB,WAAf,CAApC;AACAtF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyF,OAAJ;;AACA,YAAQF,UAAR;AACI,WAAK,OAAL;AACIE,QAAAA,OAAO,GAAI,qBAAX;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,OAAO,GAAI,uBAAX;AACA;;AACJ,WAAK,QAAL;AACA;AACIA,QAAAA,OAAO,GAAI,sBAAX;AACA;AAVR;;AAYA/B,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAExC,eAAR;AAAyB2D,MAAAA,UAAU,EAAEE;AAArC,KAAD,CAAR;AACH,GAfQ,EAeN,CAAC/B,QAAD,EAAW6B,UAAX,CAfM,CAAT;AAiBA,QAAMG,YAAY,GAAG,CACjB;AACI3C,IAAAA,EAAE,EAAE,SADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC7D,MAAM,CAAC8D,eAAvC,GAAyD9D,MAAM,CAAC+D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC7D,MAAM,CAACgE,iBAAvC,GAA2DhE,MAAM,CAACiE;AAHjF,GADiB,EAMjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC5D,MAAM,CAAC6D,eAAvC,GAAyD7D,MAAM,CAAC8D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC5D,MAAM,CAAC+D,iBAAvC,GAA2D/D,MAAM,CAACgE;AAHjF,GANiB,EAWjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC3D,MAAM,CAAC4D,eAAvC,GAAyD5D,MAAM,CAAC6D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC3D,MAAM,CAAC8D,iBAAvC,GAA2D9D,MAAM,CAAC+D;AAHjF,GAXiB,EAgBjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC1D,MAAM,CAAC2D,eAAvC,GAAyD3D,MAAM,CAAC4D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC1D,MAAM,CAAC6D,iBAAvC,GAA2D7D,MAAM,CAAC8D;AAHjF,GAhBiB,EAqBjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCzD,MAAM,CAAC0D,eAAvC,GAAyD1D,MAAM,CAAC2D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCzD,MAAM,CAAC4D,iBAAvC,GAA2D5D,MAAM,CAAC6D;AAHjF,GArBiB,EA0BjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCxD,MAAM,CAACyD,eAAvC,GAAyDzD,MAAM,CAAC0D,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCxD,MAAM,CAAC2D,iBAAvC,GAA2D3D,MAAM,CAAC4D;AAHjF,GA1BiB,EA+BjB;AACIjD,IAAAA,EAAE,EAAE,QADR;AAEIE,IAAAA,OAAO,EAAEQ,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCvD,MAAM,CAACwD,eAAvC,GAAyDxD,MAAM,CAACyD,WAF7E;AAGI5C,IAAAA,SAAS,EAAEO,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCvD,MAAM,CAAC0D,iBAAvC,GAA2D1D,MAAM,CAAC2D;AAHjF,GA/BiB,CAArB;AAsCA,sBACI;AAAA,4BAGI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,gBAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAEhC,YAFb;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,KAAK,EAAC,SALV;AAMI,QAAA,EAAE,EAAE,CACA;AACA;AACA;AACA;AACA;AACA;AANA,SANR;AAAA,+BAeI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eA4BI,QAAC,MAAD;AACI,MAAA,MAAM,EAAC,OADX;AAEI,MAAA,OAAO,EAAEA,YAFb;AAGI,MAAA,IAAI,EAAEH,IAHV;AAII,MAAA,UAAU,EAAE;AACRoC,QAAAA,EAAE,EAAE;AACAC,UAAAA,KAAK,EAAE;AADP;AADI,OAJhB;AAAA,6BAUI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,KAA5B;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAEpE,WAAzB;AAAsC,UAAA,EAAE,EAAE;AAAEqE,YAAAA,CAAC,EAAE;AAAL,WAA1C;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAEI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,QAAf;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,UAAvB;AAAA,wCACI,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,UAAD;AACI,kBAAA,GAAG,MADP;AAEI,gCAAW,QAFf;AAGI,kBAAA,KAAK,EAAElC,aAHX;AAII,kBAAA,QAAQ,EAAGmC,CAAD,IAAOlC,gBAAgB,CAACkC,CAAC,CAACpB,MAAF,CAASvC,KAAV,CAJrC;AAKI,kBAAA,IAAI,EAAC,yBALT;AAAA,0CAOI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,OADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC,OAHV;AAII,oBAAA,EAAE,EAAE;AACA,4CAAsB;AAAE4D,wBAAAA,QAAQ,EAAE;AAAZ,uBADtB;AAEA,sDAAgC;AAAE1D,wBAAAA,KAAK,EAAE;AAAT;AAFhC;AAJR;AAAA;AAAA;AAAA;AAAA,0BAPJ,eAgBI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,MADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC,MAHV;AAII,oBAAA,EAAE,EAAE;AACA,4CAAsB;AAAE0D,wBAAAA,QAAQ,EAAE;AAAZ,uBADtB;AAEA,sDAAgC;AAAE1D,wBAAAA,KAAK,EAAE;AAAT;AAFhC;AAJR;AAAA;AAAA;AAAA;AAAA,0BAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgDI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAEI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,cAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,SAAS,MAApB;AAAqB,gBAAA,OAAO,EAAE,CAA9B;AAAiC,gBAAA,UAAU,EAAC,QAA5C;AAAA,0BACK+C,YAAY,CAACY,GAAb,CAAiB,CAAC3D,KAAD,EAAQ4D,KAAR,kBACd,QAAC,WAAD;AAEI,kBAAA,KAAK,EAAE5D,KAFX;AAGI,kBAAA,WAAW,EAAE0B,iBAHjB;AAII,kBAAA,cAAc,EAAEC;AAJpB,mBACSiC,KADT;AAAA;AAAA;AAAA;AAAA,wBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAhDJ,eA+DI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAEI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,aAAf;AAAA,qCACI,QAAC,WAAD;AAAA,uCACI,QAAC,UAAD;AACI,gCAAW,aADf;AAEI,kBAAA,KAAK,EAAEhB,UAFX;AAGI,kBAAA,QAAQ,EAAGa,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACpB,MAAF,CAASvC,KAAV,CAHlC;AAII,kBAAA,IAAI,EAAC,yBAJT;AAAA,0CAMI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,QADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC,QAHV;AAII,oBAAA,EAAE,EAAE;AACA,4CAAsB;AAAE4D,wBAAAA,QAAQ,EAAE;AAAZ,uBADtB;AAEA,sDAAgC;AAAE1D,wBAAAA,KAAK,EAAE;AAAT;AAFhC;AAJR;AAAA;AAAA;AAAA;AAAA,0BANJ,eAeI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,SADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC,SAHV;AAII,oBAAA,EAAE,EAAE;AACA,4CAAsB;AAAE0D,wBAAAA,QAAQ,EAAE;AAAZ,uBADtB;AAEA,sDAAgC;AAAE1D,wBAAAA,KAAK,EAAE;AAAT;AAFhC;AAJR;AAAA;AAAA;AAAA;AAAA,0BAfJ,eAwBI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,OADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC,OAHV;AAII,oBAAA,EAAE,EAAE;AACA,4CAAsB;AAAE0D,wBAAAA,QAAQ,EAAE;AAAZ,uBADtB;AAEA,sDAAgC;AAAE1D,wBAAAA,KAAK,EAAE;AAAT;AAFhC;AAJR;AAAA;AAAA;AAAA;AAAA,0BAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBA/DJ,eAwGI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAEI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,eAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,SAAS,MAA5B;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAyC,gBAAA,UAAU,EAAC,QAApD;AAA6D,gBAAA,EAAE,EAAE;AAAE6D,kBAAAA,EAAE,EAAE;AAAN,iBAAjE;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,IAApB;AAAyB,oBAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,MAAb;AAAA,yCACI,QAAC,MAAD;AACI,oBAAA,IAAI,EAAC,OADT;AAEI,oBAAA,KAAK,EAAEjC,kBAFX;AAGI,oBAAA,QAAQ,EAAEE,kBAHd;AAII,oBAAA,gBAAgB,EAAEjC,SAJtB;AAKI,oBAAA,iBAAiB,EAAC,IALtB;AAMI,uCAAgB,6BANpB;AAOI,oBAAA,KAAK,MAPT;AAQI,oBAAA,IAAI,EAAE,CARV;AASI,oBAAA,GAAG,EAAE,CATT;AAUI,oBAAA,GAAG,EAAE,EAVT;AAWI,oBAAA,KAAK,EAAC,WAXV;AAYI,oBAAA,EAAE,EAAE;AACA,iDAA2B;AACvBG,wBAAAA,KAAK,EAAEc,KAAK,CAACkC,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC,gBAAhC,GAAmD;AADnC;AAD3B;AAZR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBANJ,eA0BI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,IAApB;AAAyB,oBAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAxGJ,eA6II,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAEI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,4BAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,SAAS,MAA5B;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAyC,gBAAA,UAAU,EAAC,QAApD;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACI,QAAC,KAAD;AAAO,oBAAA,OAAO,EAAE,CAAhB;AAAA,4CACI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAEhB,oBADb;AAEI,sBAAA,QAAQ,EAAEG,oBAFd;AAGI,sBAAA,UAAU,EAAE;AAAE,sCAAc;AAAhB;AAHhB;AAAA;AAAA;AAAA;AAAA,4BADJ,eAMI,QAAC,SAAD;AACI,sBAAA,SAAS,MADb;AAEI,sBAAA,EAAE,EAAC,gBAFP;AAGI,sBAAA,KAAK,EAAEH,oBAAoB,GAAG,iBAAH,GAAuB;AAHtD;AAAA;AAAA;AAAA;AAAA,4BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBA7IJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA,kBADJ;AA+MH,CAnUD;;GAAMpB,a;UACYrD,Q,EACGF,W,EACKC,W;;;MAHpBsD,a;AAqUN,eAAeA,aAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport {\r\n    Avatar,\r\n    ButtonBase,\r\n    Drawer,\r\n    Fab,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    Radio,\r\n    RadioGroup,\r\n    Slider,\r\n    Stack,\r\n    Switch,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { MENU_TYPE, PRESET_COLORS, SET_BORDER_RADIUS, SET_FONT_FAMILY, SET_OUTLINED_FILLED } from 'store/actions'; // THEME_RTL\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// color import\r\nimport colors from 'assets/scss/_themes-vars.module.scss';\r\nimport theme1 from 'assets/scss/_theme1.module.scss';\r\nimport theme2 from 'assets/scss/_theme2.module.scss';\r\nimport theme3 from 'assets/scss/_theme3.module.scss';\r\nimport theme4 from 'assets/scss/_theme4.module.scss';\r\nimport theme5 from 'assets/scss/_theme5.module.scss';\r\nimport theme6 from 'assets/scss/_theme6.module.scss';\r\n\r\n// assets\r\nimport { IconChecks, IconSettings } from '@tabler/icons';\r\n\r\n// concat 'px'\r\nfunction valueText(value) {\r\n    return `${value}px`;\r\n}\r\n\r\nconst PresetColor = ({ color, presetColor, setPresetColor }) => (\r\n    <Grid item>\r\n        <ButtonBase sx={{ borderRadius: '122px' }} onClick={() => setPresetColor(color.id)}>\r\n            <Avatar\r\n                variant=\"rounded\"\r\n                color=\"inherit\"\r\n                sx={{\r\n                    background: `linear-gradient(135deg, ${color.primary} 50%,  ${color.secondary}  50%)`,\r\n                    opacity: presetColor === color.id ? 0.6 : 1\r\n                }}\r\n            >\r\n                {presetColor === color.id && <IconChecks color=\"#fff\" />}\r\n            </Avatar>\r\n        </ButtonBase>\r\n    </Grid>\r\n);\r\n\r\nPresetColor.propTypes = {\r\n    color: PropTypes.shape({\r\n        id: PropTypes.string,\r\n        primary: PropTypes.string,\r\n        secondary: PropTypes.string\r\n    }),\r\n    presetColor: PropTypes.string,\r\n    setPresetColor: PropTypes.func\r\n};\r\n\r\n// ===========================|| LIVE CUSTOMIZATION ||=========================== //\r\n\r\nconst Customization = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    // drawer on/off\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    // state - layout type\r\n    const [navTypeConfig, setNavTypeConfig] = React.useState(customization.navType);\r\n    useEffect(() => dispatch({ type: MENU_TYPE, navType: navTypeConfig }), [dispatch, navTypeConfig]);\r\n\r\n    // state - preset color\r\n    const [presetColorConfig, setPresetColorConfig] = React.useState(customization.presetColor);\r\n    useEffect(() => dispatch({ type: PRESET_COLORS, presetColor: presetColorConfig }), [dispatch, presetColorConfig]);\r\n\r\n    // state - border radius\r\n    const [borderRadiusConfig, setBorderRadiusConfig] = React.useState(customization.borderRadius);\r\n    const handleBorderRadius = (event, newValue) => setBorderRadiusConfig(newValue);\r\n\r\n    useEffect(() => dispatch({ type: SET_BORDER_RADIUS, borderRadius: borderRadiusConfig }), [dispatch, borderRadiusConfig]);\r\n\r\n    // state - filled with outline textfield\r\n    const [outlinedFilledConfig, setOutlinedFilledConfig] = React.useState(customization.outlinedFilled);\r\n    const handleOutlinedFilled = (event) => setOutlinedFilledConfig(event.target.checked);\r\n\r\n    useEffect(() => dispatch({ type: SET_OUTLINED_FILLED, outlinedFilled: outlinedFilledConfig }), [dispatch, outlinedFilledConfig]);\r\n\r\n    // state - RTL layout\r\n    // const [rtlLayout, setRtlLayout] = React.useState(customization.rtlLayout);\r\n    // const handleRtlLayout = (event) => {\r\n    //     setRtlLayout(event.target.checked);\r\n    // };\r\n\r\n    if (customization.rtlLayout) {\r\n        document.querySelector('body').setAttribute('dir', 'rtl');\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     dispatch({ type: THEME_RTL, rtlLayout: rtlLayout });\r\n    // }, [dispatch, rtlLayout]);\r\n\r\n    let initialFont;\r\n    switch (customization.fontFamily) {\r\n        case `'Inter', sans-serif`:\r\n            initialFont = 'Inter';\r\n            break;\r\n        case `'Poppins', sans-serif`:\r\n            initialFont = 'Poppins';\r\n            break;\r\n        case `'Roboto', sans-serif`:\r\n        default:\r\n            initialFont = 'Roboto';\r\n            break;\r\n    }\r\n\r\n    // state - font family\r\n    const [fontFamily, setFontFamily] = React.useState(initialFont);\r\n    useEffect(() => {\r\n        let newFont;\r\n        switch (fontFamily) {\r\n            case 'Inter':\r\n                newFont = `'Inter', sans-serif`;\r\n                break;\r\n            case 'Poppins':\r\n                newFont = `'Poppins', sans-serif`;\r\n                break;\r\n            case 'Roboto':\r\n            default:\r\n                newFont = `'Roboto', sans-serif`;\r\n                break;\r\n        }\r\n        dispatch({ type: SET_FONT_FAMILY, fontFamily: newFont });\r\n    }, [dispatch, fontFamily]);\r\n\r\n    const colorOptions = [\r\n        {\r\n            id: 'default',\r\n            primary: theme.palette.mode === 'dark' ? colors.darkPrimaryMain : colors.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? colors.darkSecondaryMain : colors.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme1',\r\n            primary: theme.palette.mode === 'dark' ? theme1.darkPrimaryMain : theme1.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme1.darkSecondaryMain : theme1.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme2',\r\n            primary: theme.palette.mode === 'dark' ? theme2.darkPrimaryMain : theme2.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme2.darkSecondaryMain : theme2.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme3',\r\n            primary: theme.palette.mode === 'dark' ? theme3.darkPrimaryMain : theme3.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme3.darkSecondaryMain : theme3.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme4',\r\n            primary: theme.palette.mode === 'dark' ? theme4.darkPrimaryMain : theme4.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme4.darkSecondaryMain : theme4.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme5',\r\n            primary: theme.palette.mode === 'dark' ? theme5.darkPrimaryMain : theme5.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme5.darkSecondaryMain : theme5.secondaryMain\r\n        },\r\n        {\r\n            id: 'theme6',\r\n            primary: theme.palette.mode === 'dark' ? theme6.darkPrimaryMain : theme6.primaryMain,\r\n            secondary: theme.palette.mode === 'dark' ? theme6.darkSecondaryMain : theme6.secondaryMain\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {/* toggle button */}\r\n\r\n            <Tooltip title=\"Live Customize\">\r\n                <Fab\r\n                    component=\"div\"\r\n                    onClick={handleToggle}\r\n                    size=\"medium\"\r\n                    variant=\"string\"\r\n                    color=\"primary\"\r\n                    sx={{\r\n                        // bottom: 0,\r\n                        // m: 4,\r\n                        // position: 'fixed',\r\n                        // right: 20,\r\n                        // zIndex: theme.zIndex.speedDial,\r\n                        // boxShadow: theme.customShadows.secondary\r\n                    }}\r\n                >\r\n                    <Button>\r\n                        Customize\r\n                        {/* <IconButton color=\"inherit\" size=\"large\" disableRipple>\r\n                            <IconSettings />\r\n                        </IconButton> */}\r\n                    </Button>\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n            <Drawer\r\n                anchor=\"right\"\r\n                onClose={handleToggle}\r\n                open={open}\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 280\r\n                    }\r\n                }}\r\n            >\r\n                <PerfectScrollbar component=\"div\">\r\n                    <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\r\n                        <Grid item xs={12}>\r\n                            {/* layout type */}\r\n                            <SubCard title=\"Layout\">\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Mode</FormLabel>\r\n                                    <RadioGroup\r\n                                        row\r\n                                        aria-label=\"layout\"\r\n                                        value={navTypeConfig}\r\n                                        onChange={(e) => setNavTypeConfig(e.target.value)}\r\n                                        name=\"row-radio-buttons-group\"\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value=\"light\"\r\n                                            control={<Radio />}\r\n                                            label=\"Light\"\r\n                                            sx={{\r\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\r\n                                                '& .MuiFormControlLabel-label': { color: 'grey.900' }\r\n                                            }}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"dark\"\r\n                                            control={<Radio />}\r\n                                            label=\"Dark\"\r\n                                            sx={{\r\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\r\n                                                '& .MuiFormControlLabel-label': { color: 'grey.900' }\r\n                                            }}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                                {/* <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n                                    <FormLabel component=\"legend\">Direction</FormLabel>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={rtlLayout}\r\n                                                onChange={handleRtlLayout}\r\n                                                inputProps={{ 'aria-label': 'controlled-direction' }}\r\n                                            />\r\n                                        }\r\n                                        label=\"RTL\"\r\n                                    />\r\n                                </FormControl> */}\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/* Theme Preset Color */}\r\n                            <SubCard title=\"Preset Color\">\r\n                                <Grid item container spacing={2} alignItems=\"center\">\r\n                                    {colorOptions.map((color, index) => (\r\n                                        <PresetColor\r\n                                            key={index}\r\n                                            color={color}\r\n                                            presetColor={presetColorConfig}\r\n                                            setPresetColor={setPresetColorConfig}\r\n                                        />\r\n                                    ))}\r\n                                </Grid>\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/* font family */}\r\n                            <SubCard title=\"Font Family\">\r\n                                <FormControl>\r\n                                    <RadioGroup\r\n                                        aria-label=\"font-family\"\r\n                                        value={fontFamily}\r\n                                        onChange={(e) => setFontFamily(e.target.value)}\r\n                                        name=\"row-radio-buttons-group\"\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value=\"Roboto\"\r\n                                            control={<Radio />}\r\n                                            label=\"Roboto\"\r\n                                            sx={{\r\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\r\n                                                '& .MuiFormControlLabel-label': { color: 'grey.900' }\r\n                                            }}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"Poppins\"\r\n                                            control={<Radio />}\r\n                                            label=\"Poppins\"\r\n                                            sx={{\r\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\r\n                                                '& .MuiFormControlLabel-label': { color: 'grey.900' }\r\n                                            }}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"Inter\"\r\n                                            control={<Radio />}\r\n                                            label=\"Inter\"\r\n                                            sx={{\r\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\r\n                                                '& .MuiFormControlLabel-label': { color: 'grey.900' }\r\n                                            }}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/* border radius */}\r\n                            <SubCard title=\"Border Radius\">\r\n                                <Grid item xs={12} container spacing={2} alignItems=\"center\" sx={{ mt: 2.5 }}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" color=\"secondary\">\r\n                                            4px\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Slider\r\n                                            size=\"small\"\r\n                                            value={borderRadiusConfig}\r\n                                            onChange={handleBorderRadius}\r\n                                            getAriaValueText={valueText}\r\n                                            valueLabelDisplay=\"on\"\r\n                                            aria-labelledby=\"discrete-slider-small-steps\"\r\n                                            marks\r\n                                            step={2}\r\n                                            min={4}\r\n                                            max={24}\r\n                                            color=\"secondary\"\r\n                                            sx={{\r\n                                                '& .MuiSlider-valueLabel': {\r\n                                                    color: theme.palette.mode === 'dark' ? 'secondary.dark' : 'secondary.light'\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" color=\"secondary\">\r\n                                            24px\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/* filled with outline textfield */}\r\n                            <SubCard title=\"Input Outlined With Filled\">\r\n                                <Grid item xs={12} container spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Stack spacing={2}>\r\n                                            <Switch\r\n                                                checked={outlinedFilledConfig}\r\n                                                onChange={handleOutlinedFilled}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"outlined-basic\"\r\n                                                label={outlinedFilledConfig ? 'With Background' : 'Without Background'}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </SubCard>\r\n                        </Grid>\r\n                    </Grid>\r\n                </PerfectScrollbar>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Customization;\r\n"]},"metadata":{},"sourceType":"module"}