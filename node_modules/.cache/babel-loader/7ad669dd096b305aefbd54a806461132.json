{"ast":null,"code":"var _jsxFileName = \"/Users/olegkuftyrev/Downloads/mm2/MicroM/src/views/ui-elements/advance/UIDialog/ConfirmationDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControlLabel, List, ListItemText, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport ListItemButton from '@material-ui/core/ListItemButton'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  }\n})); // select options\n\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel']; // ===============================|| SELECTION ROW ||=============================== //\n\nfunction ConfirmationDialogRaw(props) {\n  _s();\n\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    maxWidth: \"xs\",\n    TransitionProps: {\n      onEntering: handleEntering\n    },\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"confirmation-dialog-title\",\n      children: \"Phone Ringtone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        ref: radioGroupRef,\n        \"aria-label\": \"ringtone\",\n        name: \"ringtone\",\n        value: value,\n        onChange: handleChange,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 80\n          }, this),\n          label: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        pr: 2.5,\n        pt: 2.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        color: \"error\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: handleOk,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfirmationDialogRaw, \"OMt7sSt5R/TCL4tHSUZzglY9GI4=\");\n\n_c = ConfirmationDialogRaw;\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n}; // ===============================|| UI DIALOG - CONFIRMATION ||=============================== //\n\nexport default function ConfirmationDialog() {\n  _s2();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Hangouts Call');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      role: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Interruptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"ringtone-menu\",\n        \"aria-label\": \"phone ringtone\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Phone Ringtone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 34\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Default Notification Ringtone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 34\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Tethys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n        classes: {\n          paper: classes.paper\n        },\n        id: \"ringtone-menu\",\n        keepMounted: true,\n        open: open,\n        onClose: handleClose,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConfirmationDialog, \"RGGRdTCWKPqAMsmIFmXTNmUAgO0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ConfirmationDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfirmationDialogRaw\");\n$RefreshReg$(_c2, \"ConfirmationDialog\");","map":{"version":3,"sources":["/Users/olegkuftyrev/Downloads/mm2/MicroM/src/views/ui-elements/advance/UIDialog/ConfirmationDialog.js"],"names":["React","PropTypes","makeStyles","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControlLabel","List","ListItemText","Radio","RadioGroup","Typography","ListItemButton","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","options","ConfirmationDialogRaw","props","onClose","value","valueProp","open","other","setValue","useState","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","onEntering","map","option","pr","pt","propTypes","func","isRequired","bool","string","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose","newValue"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    FormControlLabel,\r\n    List,\r\n    ListItemText,\r\n    Radio,\r\n    RadioGroup,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ListItemButton from '@material-ui/core/ListItemButton';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435\r\n    }\r\n}));\r\n\r\n// select options\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel'\r\n];\r\n\r\n// ===============================|| SELECTION ROW ||=============================== //\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props;\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp);\r\n        }\r\n    }, [valueProp, open]);\r\n\r\n    const handleEntering = () => {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleOk = () => {\r\n        onClose(value);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"xs\"\r\n            TransitionProps={{ onEntering: handleEntering }}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup ref={radioGroupRef} aria-label=\"ringtone\" name=\"ringtone\" value={value} onChange={handleChange}>\r\n                    {options.map((option) => (\r\n                        <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions sx={{ pr: 2.5, pt: 2.5 }}>\r\n                <Button autoFocus color=\"error\" onClick={handleCancel}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" size=\"small\" onClick={handleOk}>\r\n                    Done\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired\r\n};\r\n\r\n// ===============================|| UI DIALOG - CONFIRMATION ||=============================== //\r\n\r\nexport default function ConfirmationDialog() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('Hangouts Call');\r\n\r\n    const handleClickListItem = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (newValue) => {\r\n        setOpen(false);\r\n\r\n        if (newValue) {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"group\">\r\n                <ListItemButton divider disabled>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">Interruptions</Typography>} />\r\n                </ListItemButton>\r\n                <ListItemButton\r\n                    divider\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                >\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"subtitle1\">Phone Ringtone</Typography>}\r\n                        secondary={<Typography variant=\"caption\">{value}</Typography>}\r\n                    />\r\n                </ListItemButton>\r\n                <ListItemButton divider disabled>\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"subtitle1\">Default Notification Ringtone</Typography>}\r\n                        secondary={<Typography variant=\"caption\">Tethys</Typography>}\r\n                    />\r\n                </ListItemButton>\r\n                <ConfirmationDialogRaw\r\n                    classes={{\r\n                        paper: classes.paper\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}